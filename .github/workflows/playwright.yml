name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      update_snapshots:
        description: 'Update baseline screenshots?'
        required: false
        default: 'false'
        type: choice
        options: ['true', 'false']

      browser:
        description: 'Browser'
        required: false
        default: 'all'
        type: choice
        options: ['all', 'chromium', 'firefox']

jobs:
  test-execution:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 18
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      shell: bash
      env:
        BROWSER: ${{ github.event_name == 'workflow_dispatch' && inputs.browser || 'all' }}
        UPDATE_SNAPSHOTS: ${{ github.event_name == 'workflow_dispatch' && inputs.update_snapshots || 'false' }}
      run: |
          CMD="npx playwright test"
          if [[ "$BROWSER" != "all" ]]; then
            CMD="$CMD --project=$BROWSER"
          fi
          if [[ "$UPDATE_SNAPSHOTS" == "true" ]]; then
            CMD="$CMD --update-snapshots"
          fi
          echo "Running: $CMD"
          eval $CMD

    - name: Generate Allure report
      if: always()
      run: npx allure generate ./allure-results -o ./allure-report

    - name: Upload test reports    
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ matrix.os }}
        path: |
          playwright-report/
          allure-report/
        retention-days: 30
